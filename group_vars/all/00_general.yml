INFINITO_ENVIRONMENT:       "production"

HOST_CURRENCY:            "EUR"
HOST_TIMEZONE:            "UTC"

# https://en.wikipedia.org/wiki/ISO_639
HOST_LL:                  "en"          # Some applications are case sensitive
HOST_LL_CC:               "{{HOST_LL}}_GB"

HOST_DATE_FORMAT:         "YYYY-MM-DD"
HOST_TIME_FORMAT:         "HH:mm"

HOST_THOUSAND_SEPARATOR:  "."
HOST_DECIMAL_MARK:        ","

# Deployment mode
deployment_mode:        "single"      # Use single, if you deploy on one server. Use cluster if you setup in cluster mode.

web_protocol:           "https"       # Web protocol type. Use https or http. If you run local you need to change it to http
WEB_PORT:               "{{ 443 if web_protocol == 'https' else 80 }}"  # Default port web applications will listen to

## Domain
primary_domain_tld:     "localhost"                                     # Top Level Domain of the server
primary_domain_sld:     "infinito"                                        # Second Level Domain of the server
primary_domain:         "{{primary_domain_sld}}.{{primary_domain_tld}}" # Primary Domain of the server

# Server Tact Variables 

## Ours in which the server is "awake" (100% working). Rest of the time is reserved for maintanance
hours_server_awake:                       "0..23"

## Random delay for systemd timers to avoid peak loads.
randomized_delay_sec:                     "5min"

# Runtime Variables for Process Control
activate_all_timers:                       false   # Activates all timers, independend if the handlers had been triggered

# This enables debugging in ansible and in the apps
# You SHOULD NOT enable this on production servers
enable_debug:                             false

dns_provider:                             cloudflare              # The DNS Provider\Registrar for the domain

# Which ACME method to use: webroot, cloudflare, or hetzner
certbot_acme_challenge_method:            "cloudflare"
certbot_credentials_dir:                  /etc/certbot
certbot_credentials_file:                 "{{ certbot_credentials_dir }}/{{ certbot_acme_challenge_method }}.ini"
certbot_dns_api_token:                    ""                      # Define in inventory file: More information here: group_vars/all/docs/CLOUDFLARE_API_TOKEN.md
certbot_dns_propagation_wait_seconds:     40                      # How long should the script wait for DNS propagation before continuing
certbot_flavor:                           san                     # Possible options: san (recommended, with a dns flavor like cloudflare, or hetzner), wildcard(doesn't function with www redirect), dedicated

# Path where Certbot stores challenge webroot files
letsencrypt_webroot_path: "/var/lib/letsencrypt/"

# Base directory containing Certbot configuration, account data, and archives
letsencrypt_base_path: "/etc/letsencrypt/"

# Symlink directory for the current active certificate and private key
letsencrypt_live_path: "{{ letsencrypt_base_path }}live/"

## Docker Role Specific Parameters
docker_restart_policy:                    "unless-stopped"

# default value if not set via CLI (-e) or in playbook vars
allowed_applications: []

# helper
_applications_nextcloud_oidc_flavor: >-
  {{
    applications
      | get_app_conf(
          'web-app-nextcloud',
          'oidc.flavor',
          False,
          'oidc_login'
          if applications
            | get_app_conf('web-app-nextcloud','features.ldap',False, True)
          else 'sociallogin'
        )
  }}