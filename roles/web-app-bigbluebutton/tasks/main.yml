---
- name: "For '{{ application_id }}': include docker-compose role"
  include_role:
    name: cmp-docker-proxy
  vars:
    database_instance:  "{{ application_id }}"
    database_password:  "{{ applications | get_app_conf(application_id, 'credentials.postgresql_secret', True) }}"
    database_username:  "postgres"
    database_name:      ""                              # Multiple databases

- name: configure websocket_upgrade.conf
  copy: 
    src:  "websocket_upgrade.conf"
    dest: "{{nginx.directories.http.maps}}websocket_upgrade.conf"
  notify: restart openresty

- name: "Set BBB Facts"
  set_fact:
    bbb_env_file_link:            "{{ docker_repository_path }}.env"
    bbb_env_file_origine:         "{{ docker_compose.files.env }}"
    docker_compose_file_origine:  "{{ docker_repository_path }}docker-compose.yml"
    docker_compose_file_final:    "{{ docker_compose.directories.instance }}docker-compose.yml"

- name: deploy .env
  # This seems redundant @todo Checkout if this is true and if so, delete it
  template: 
    src:  env.j2
    dest: "{{ bbb_env_file_origine }}"

- name: Create symbolic link from .env file to target location
  file:
    src:    "{{ bbb_env_file_origine }}"
    dest:   "{{ bbb_env_file_link }}"
    state:  link

- name: "Setup docker-compose.yml file"
  include_tasks: "docker-compose.yml"

- name: Ensure all containers in instance are running
  include_tasks: "{{ playbook_dir }}/roles/docker-compose/tasks/04_ensure_up.yml"

- name: flush docker service
  meta: flush_handlers

- name: "Get greenlight container name"
  shell: |
    docker compose ps -q greenlight
  args:
    chdir: "{{ docker_compose.directories.instance }}"
  register: greenlight_id

- name: "Wait until BigBlueButton (greenlight) is running"
  shell: |
    docker inspect --format='{{'{{'}}.State.Status{{'}}'}}' {{ greenlight_id.stdout }}
  args:
    chdir: "{{ docker_compose.directories.instance }}"
  register: bbb_state
  until: bbb_state.stdout.strip() == "running"
  retries: 30
  delay: 5
  changed_when: false

- name: create admin
  command:
    cmd: docker compose exec greenlight bundle exec rake admin:create
    chdir: "{{ docker_compose.directories.instance }}"
  when: bbb_setup
  ignore_errors: true
  register: admin_creation_result