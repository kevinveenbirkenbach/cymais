---
# Docker Central Database Role can't be used here
- name: "include docker-compose role"
  include_role: 
    name: docker-compose
  vars:
    database_instance:  "{{ application_id }}"
    database_password:  "{{ applications | get_app_conf(application_id, 'credentials.postgresql_secret', True) }}"
    database_username:  "postgres"
    database_name:      ""                              # Multiple databases

- name:                 "Seed BigBlueButton Database for Backup"
  include_tasks:        "{{ playbook_dir }}/roles/sys-bkp-docker-2-loc/tasks/seed-database-to-backup.yml"
  vars:
    database_instance:  "{{ application_id }}"
    database_password:  "{{ applications | get_app_conf(application_id, 'credentials.postgresql_secret', True) }}"
    database_username:  "postgres"
    database_name:      ""                              # Multiple databases

- name: "include role srv-proxy-6-6-domain"
  include_role:
    name: srv-proxy-6-6-domain

- name: pull docker repository
  git:
    repo: "https://github.com/bigbluebutton/docker.git"
    dest: "{{ bbb_repository_directory }}"
    update: yes
    recursive: yes
    version: main
  notify: setup bigbluebutton

- name: configure websocket_upgrade.conf
  copy: 
    src:  "websocket_upgrade.conf"
    dest: "{{nginx.directories.http.maps}}websocket_upgrade.conf"
  notify: restart nginx

- name: "Remove directory {{ docker_compose.directories.env }}"
  file:
    path: "{{ docker_compose.directories.env }}"
    state: absent

- name: deploy .env
  template: 
    src:  env.j2
    dest: "{{ bbb_env_file_origine }}"
  notify: setup bigbluebutton

- name: Create symbolic link from .env file to target location
  file:
    src:    "{{ bbb_env_file_origine }}"
    dest:   "{{ bbb_env_file_link }}"
    state:  link
  notify: setup bigbluebutton

- name:           "Check if any container is running in {{ docker_compose.directories.instance }}"
  command:        docker compose ps -q --filter status=running
  args:
    chdir:        "{{ docker_compose.directories.instance }}"
  register:       docker_ps
  changed_when:   (docker_ps.stdout | trim) == ""
  notify:         setup bigbluebutton

- name: flush docker service
  meta: flush_handlers

- name: Wait for BigBlueButton
  wait_for:
    host: "{{ domains | get_domain('web-app-bigbluebutton') }}"
    port: 80
    delay: 5
    timeout: 300

- name: create admin
  command:
    cmd: docker compose exec greenlight bundle exec rake admin:create
    chdir: "{{ docker_compose.directories.instance }}"
  when: bigbluebutton_setup
  ignore_errors: true
  register: admin_creation_result