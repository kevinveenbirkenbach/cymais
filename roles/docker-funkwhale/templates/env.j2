# If you have any doubts about what a setting does,
# @see https://docs.funkwhale.audio/configuration.html#configuration-reference
# @see https://docs.funkwhale.audio/administrator/configuration/env-file.html

# If you're tweaking this file from the template, ensure you edit at least the
# following variables:
# - EMAIL_CONFIG and DEFAULT_FROM_EMAIL if you plan to send e-mails)
# On non-docker setup **only**, you'll also have to tweak/uncomment those variables:
# - DATABASE_URL
# - CACHE_URL
#
# You **don't** need to update those variables on pure docker setups.
#
# Additional options you may want to check:
# - MUSIC_DIRECTORY_PATH and MUSIC_DIRECTORY_SERVE_PATH if you plan to use
#   in-place import
#
# Docker only
# -----------
MUSIC_DIRECTORY_PATH={{music_directory_path}}

# Assuming that the following variable isn't used anymore. 
# @todo remove it if this is true
FUNKWHALE_VERSION={{applications.funkwhale.version}}

# End of docker-only configuration

# General configuration
# ---------------------
# Assuming that the following variable isn't used anymore. 
# @todo remove it if this is true
FUNKWHALE_API_IP=127.0.0.1
# Assuming that the following variable isn't used anymore. 
# @todo remove it if this is true
FUNKWHALE_API_PORT={{http_port}}

# The number of web workers to start in parallel. Higher means you can handle
# more concurrent requests, but also leads to higher CPU/Memory usage
FUNKWHALE_WEB_WORKERS=4
# Replace this by the definitive, public domain you will use for
# your instance. It cannot be changed after initial deployment
# without breaking your instance.
FUNKWHALE_HOSTNAME={{domain}}
FUNKWHALE_PROTOCOL=https

# Log level (debug, info, warning, error, critical)
LOGLEVEL={% if enable_debug | bool %}debug{% else %}error{% endif %}

# Configure e-mail sending using this variale
# By default, funkwhale will output e-mails sent to stdout
# here are a few examples for this setting
# EMAIL_CONFIG=consolemail://         # output e-mails to console (the default)
# EMAIL_CONFIG=dummymail://          # disable e-mail sending completely
# On a production instance, you'll usually want to use an external SMTP server:
# If `user` or `password` contain special characters (eg.
# `noreply@youremail.host` as `user`), be sure to urlencode them, using
# for example the command:
# `python3 -c 'import urllib.parse; print(urllib.parse.quote_plus
# ("noreply@youremail.host"))'`
# (returns `noreply%40youremail.host`)
# EMAIL_CONFIG=smtp://user:password@youremail.host:25
# EMAIL_CONFIG=smtp+ssl://user:password@youremail.host:465
EMAIL_CONFIG=smtp+tls://{{system_email.local}}:{{system_email.password}}@{{system_email.host}}:{{system_email.port}}

# Make e-mail verification mandatory before using the service
# Doesn't apply to admins.
# ACCOUNT_EMAIL_VERIFICATION_ENFORCE=false

# The e-mail address to use to send system e-mails.
DEFAULT_FROM_EMAIL={{system_email.from}}

# Depending on the reverse proxy used in front of your funkwhale instance,
# the API will use different kind of headers to serve audio files
# Allowed values: nginx, apache2
REVERSE_PROXY_TYPE=nginx

# API/Django configuration

# Number of worker processes to execute. Defaults to 0, in which case it uses your number of CPUs
# Celery workers handle background tasks (such file imports or federation
# messaging). The more processes a worker gets, the more tasks
# can be processed in parallel. However, more processes also means
# a bigger memory footprint.
CELERYD_CONCURRENCY={{celeryd_concurrency}}

# Where media files (such as album covers or audio tracks) should be stored
# on your system?
# (Ensure this directory actually exists)
MEDIA_ROOT={{media_root}}

# Where static files (such as API css or icons) should be compiled
# on your system?
# (Ensure this directory actually exists)
STATIC_ROOT={{static_root}}

# which settings module should django use?
# You don't have to touch this unless you really know what you're doing
DJANGO_SETTINGS_MODULE=config.settings.production

# Generate one using `openssl rand -base64 45`, for example
DJANGO_SECRET_KEY={{funkwhale_django_secret}}

{% if ldap_enabled | bool %}
# LDAP settings
# Use the following options to allow authentication on your Funkwhale instance
# using a LDAP directory.
# Have a look at https://docs.funkwhale.audio/installation/ldap.html for
# detailed instructions.

LDAP_ENABLED        =   True
LDAP_SERVER_URI     =   "{{ldap.server.uri}}"
LDAP_BIND_DN        =   "{{ldap.dn.administrator}}"
LDAP_BIND_PASSWORD  =   "{{applications.ldap.administrator_database_password}}"
LDAP_SEARCH_FILTER  =   "(|(cn={0})(mail={0}))"
LDAP_START_TLS      =   False
LDAP_ROOT_DN        =   "{{ldap.dn.root}}"
{% endif %}

FUNKWHALE_FRONTEND_PATH=/srv/funkwhale/front/dist

DATABASE_URL = postgresql://{{database_username}}:{{database_password}}@{{database_host}}:{{database_port}}/{{ database_name }}