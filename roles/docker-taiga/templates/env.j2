# Taiga's URLs - Variables to define where Taiga should be served
TAIGA_SITES_SCHEME  =   https          # serve Taiga using "http" or "https" (secured) connection
TAIGA_SITES_DOMAIN  =   "{{domains[application_id]}}"   # Taiga's base URL
  
TAIGA_SUBPATH       =   ""  # it'll be appended to the TAIGA_DOMAIN (use either "" or a "/subpath")
WEBSOCKETS_SCHEME   =   wss # events connection protocol (use either "ws" or "wss")

# Taiga's Secret Key - Variable to provide cryptographic signing
TAIGA_SECRET_KEY    =   "{{taiga_secret_key}}" # Please, change it to an unpredictable value!!
SECRET_KEY          =   "{{taiga_secret_key}}"

# Taiga's Database settings - Variables to create the Taiga database and connect to it
POSTGRES_USER       =   "{{database_username}}"       # user to connect to PostgreSQL
POSTGRES_PASSWORD   =   "{{database_password}}"   # database user's password
POSTGRES_DB         =   "{{database_name}}"
POSTGRES_HOST       =   "{{database_host}}"

# Taiga's SMTP settings - Variables to send Taiga's emails to the users
EMAIL_BACKEND       =   "{{email_backend}}"          # use an SMTP server or display the emails in the console (either "smtp" or "console")
EMAIL_HOST          =   "{{system_email.host}}"      # SMTP server address
EMAIL_PORT          =   "{{system_email.port}}" # default SMTP port
EMAIL_HOST_USER     =   "{{system_email.username}}"  # user to connect the SMTP server
EMAIL_HOST_PASSWORD =   "{{system_email.password}}"  # SMTP user's password
EMAIL_DEFAULT_FROM  =   "{{system_email.from}}"      # default email address for the automated emails
EMAIL_BACKEND:      =   "django.core.mail.backends.{{email_backend}}.EmailBackend"
DEFAULT_FROM_EMAIL  =   "{{system_email.from}}"

# EMAIL_USE_TLS/EMAIL_USE_SSL are mutually exclusive (only set one of those to True)
EMAIL_USE_TLS   =   "{{ system_email.tls | lower | capitalize }}"         # use TLS (secure) connection with the SMTP server
EMAIL_USE_SSL   =   "{{ 'False' if system_email.start_tls else 'True' }}" # use implicit TLS (secure) connection with the SMTP server

RABBITMQ_USER=taiga
RABBITMQ_PASS=taiga
RABBITMQ_VHOST=taiga

# Taiga's RabbitMQ settings - Variables to leave messages for the realtime and asynchronous events
RABBITMQ_DEFAULT_RABBITMQ_USER  =   taiga  # user to connect to RabbitMQ
RABBITMQ_DEFAULT_RABBITMQ_PASS  =   taiga  # RabbitMQ user's password
RABBITMQ_DEFAULT_RABBITMQ_VHOST =   taiga  # RabbitMQ container name
RABBITMQ_ERLANG_COOKIE          =   secret-erlang-cookie  # unique value shared by any connected instance of RabbitMQ

# Taiga's Attachments - Variable to define how long the attachments will be accesible
ATTACHMENTS_MAX_AG  =   360  # token expiration date (in seconds)
MAX_AGE             =   360
      

# Taiga's Telemetry - Variable to enable or disable the anonymous telemetry
ENABLE_TELEMETRY    =   True

{% if applications[application_id].oidc.enabled %}
# OICD 
# @See https://github.com/robrotheram/taiga-contrib-openid-auth
ENABLE_OPENID="True"
OPENID_URL="{{oidc.client.authorize_url}}"
OPENID_USER_URL="{{oidc.client.user_info_url}}"
OPENID_TOKEN_URL="{{oidc.client.torken_url}}"
OPENID_CLIENT_ID="{{oidc.client.id}}"
OPENID_CLIENT_SECRET="{{oidc.client.secret}}"
OPENID_NAME="SSO"
# Default Values
#
# OPENID_ID_FIELD="sub"
# OPENID_USERNAME_FIELD="preferred_username"
# OPENID_FULLNAME_FIELD="name"
# OPENID_EMAIL_FIELD="email"
# OPENID_SCOPE="openid email"
{% endif %}