services:

{% include 'templates/docker/services/' + database_type + '.yml.j2' %}

  synapse:
    image: matrixdotorg/synapse:{{applications.matrix.synapse.version}}
    container_name: matrix-synapse
    restart: {{docker_restart_policy}}
    logging:
      driver: journald
    volumes:
      - synapse_data:/data
      - ./homeserver.yaml:/data/homeserver.yaml:ro
      - ./{{domains.matrix_synapse}}.log.config:/data/{{domains.matrix_synapse}}.log.config:ro
{% for item in bridges %}
      - {{docker_compose_instance_directory}}mautrix/{{item.bridge_name}}/registration.yaml:{{registration_file_folder}}{{item.bridge_name}}.registration.yaml:ro
{% endfor %}
    environment:
      - SYNAPSE_SERVER_NAME={{domains.matrix_synapse}}
      - SYNAPSE_REPORT_STATS=no
    ports:
      - "127.0.0.1:{{ports.localhost.http_ports.matrix_synapse}}:8008"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8008/"]
      interval: 1m
      timeout: 10s
      retries: 3
{% include 'templates/docker/container/depends-on-also-database.yml.j2' %}
{% for item in bridges %}
      mautrix-{{item.bridge_name}}:
        condition: service_healthy
{% endfor %}
{% include 'templates/docker/container/networks.yml.j2' %}
    
  element:
    image: vectorim/element-web:{{applications.matrix.element.version}}
    container_name: matrix-element
    restart: {{docker_restart_policy}}
    volumes:
      - ./element-config.json:/app/config.json
    ports:
      - "127.0.0.1:{{ports.localhost.http_ports.matrix_element}}:80"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:80/"]
      interval: 1m
      timeout: 10s
      retries: 3
{% include 'templates/docker/container/networks.yml.j2' %}

{% for item in bridges %}
  mautrix-{{item.bridge_name}}:
    container_name: matrix-{{item.bridge_name}}
    image: dock.mau.dev/mautrix/{{ item.bridge_name }}:latest
    restart: {{docker_restart_policy}}
    volumes:
      - ./mautrix/{{item.bridge_name}}:/data
    healthcheck:
      test: ["CMD-SHELL", "test -f {{registration_file_folder}}registration.yaml || exit 1"]
      interval: 1m
      timeout: 10s
      retries: 3
{% include 'templates/docker/container/networks.yml.j2' %}
{% endfor %}
# Deactivated chatgpt. 
# @todo needs to be reactivated as soon as bug is found
#  matrix-chatgpt-bot:
#    restart: {{docker_restart_policy}}
#    container_name: matrix-chatgpt
#    image: ghcr.io/matrixgpt/matrix-chatgpt-bot:latest
#    volumes:
#      - chatgpt_data:/storage
#    environment:
#      OPENAI_API_KEY: '{{matrix_chatgpt_bridge_openai_api_key}}'
#      # Uncomment the next two lines if you are using Azure OpenAI API
#      # OPENAI_AZURE: 'false'
#      # CHATGPT_REVERSE_PROXY: 'your-completion-endpoint-here'
#      CHATGPT_CONTEXT: 'thread'
#      CHATGPT_API_MODEL: 'gpt-3.5-turbo'
#      # Uncomment and edit the next line if needed
#      # CHATGPT_PROMPT_PREFIX: 'Instructions:\nYou are ChatGPT, a large language model trained by OpenAI.'
#      # CHATGPT_IGNORE_MEDIA: 'false'
#      CHATGPT_REVERSE_PROXY: 'https://api.openai.com/v1/chat/completions'
#      # Uncomment and edit the next line if needed
#      # CHATGPT_TEMPERATURE: '0.8'
#      # Uncomment and edit the next line if needed
#      #CHATGPT_MAX_CONTEXT_TOKENS: '4097'
#      CHATGPT_MAX_PROMPT_TOKENS: '3000'
#      KEYV_BACKEND: 'file'
#      KEYV_URL: ''
#      KEYV_BOT_ENCRYPTION: 'false'
#      KEYV_BOT_STORAGE: 'true'
#      MATRIX_HOMESERVER_URL: 'https://{{domains.matrix_synapse}}'
#      MATRIX_BOT_USERNAME: '@chatgptbot:{{applications.matrix.server_name}}'
#      MATRIX_ACCESS_TOKEN: '{{ matrix_chatgpt_bridge_access_token | default('') }}'
#      MATRIX_BOT_PASSWORD: '{{matrix_chatgpt_bridge_user_password}}'
#      MATRIX_DEFAULT_PREFIX: '!chatgpt'
#      MATRIX_DEFAULT_PREFIX_REPLY: 'false'
#      #MATRIX_BLACKLIST: ''
#      MATRIX_WHITELIST: ':{{applications.matrix.server_name}}'
#      MATRIX_AUTOJOIN: 'true'
#      MATRIX_ENCRYPTION: 'true'
#      MATRIX_THREADS: 'true'
#      MATRIX_PREFIX_DM: 'false'
#      MATRIX_RICH_TEXT: 'true'

{% include 'templates/docker/compose/volumes.yml.j2' %}
  synapse_data:
#  chatgpt_data:

{% include 'templates/docker/compose/networks.yml.j2' %}