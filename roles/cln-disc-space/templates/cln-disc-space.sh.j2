#!/bin/sh
# @param $1 mimimum free disc space
# @param $2 --force to for execution indepentend on how much disc space is free

minimum_percent_cleanup_disc_space="$1"
force_freeing=false
echo "Checking free disc space..."
df
if [ $# -gt 0 ] && [ "$2" == "--force" ]; then
  echo "Forcing disc space freeing."
  force_freeing=true 
fi 
for disc_use_percent in $(df --output=pcent | sed 1d)
do
    disc_use_percent_number=$(echo "$disc_use_percent" | sed "s/%//")
    if [ "$disc_use_percent_number" -gt "$minimum_percent_cleanup_disc_space" ]; then
      echo "WARNING: $disc_use_percent_number exceeds the limit of {{size_percent_disc_space_warning}}%."
      force_freeing=true 
    fi
done
if [ "$force_freeing" = true ]; then
  echo "cleaning up /tmp" &&
  find /tmp -type f -atime +10 -delete || exit 1
  
  {% if backups_folder_path is defined and size_percent_maximum_backup is defined %}
  echo "cleaning up backups" &&
  python {{path_administrator_scripts}}cln-backups/cln-backups.py --backups-folder-path {{backups_folder_path}} --maximum-backup-size-percent {{size_percent_maximum_backup}} || exit 2
  {% endif %}

  if pacman -Qs $package > /dev/null ; then
    echo "cleaning up docker" &&
    docker system prune -f || exit 3

    nextcloud_application_container="nextcloud-application"
    if [ "$(docker ps -a -q -f name=$nextcloud_application_container)" ] ; then
      echo "cleaning up docker nextcloud" &&
      docker exec -it -u www-data $nextcloud_application_container /var/www/html/occ files:cleanup || exit 4
      docker exec -it -u www-data $nextcloud_application_container /var/www/html/occ trashbin:cleanup --all-users || exit 5
      docker exec -it -u www-data $nextcloud_application_container /var/www/html/occ versions:cleanup || exit 6
    fi

  fi

  echo "cleaning pacman cache" &&
  yes | pacman -Sc || exit 7

  echo "cleanup finished."
else
  echo "Sufficiend disc space available."
  echo "To force the freeing of disc space pass the parameter --force."
fi
exit 0